name: Cross-Platform CMake Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Debug, Release]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev libxi-dev libxcursor-dev libxrandr-dev libxinerama-dev pkg-config

    - name: Install macOS dependencies
      if: runner.os == 'macOS'
      run: |
        # Xcode command line tools are pre-installed on GitHub runners
        echo "macOS dependencies ready"

    - name: Configure CMake (Windows)
      if: runner.os == 'Windows'
      run: |
        cmake -G "Visual Studio 17 2022" -A x64 -S . -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

    - name: Configure CMake (Unix)
      if: runner.os != 'Windows'
      run: |
        cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -S . -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

    - name: Build (Windows)
      if: runner.os == 'Windows'
      run: |
        cmake --build build --config ${{ matrix.build_type }} --parallel

    - name: Build (Unix)
      if: runner.os != 'Windows'
      run: |
        cmake --build build --parallel

    - name: Test executable exists (Windows)
      if: runner.os == 'Windows'
      run: |
        if (Test-Path "build/bin/${{ matrix.build_type }}/OpenGLApp.exe") {
          Write-Host "✓ Windows executable created successfully"
          Write-Host "Build info: $(Get-ItemProperty build/bin/${{ matrix.build_type }}/OpenGLApp.exe | Select-Object Length, LastWriteTime)"
        } else {
          Write-Host "✗ Windows executable not found"
          exit 1
        }
      shell: pwsh

    - name: Test executable exists (Unix)
      if: runner.os != 'Windows'
      run: |
        if [ -f "build/bin/OpenGLApp" ]; then
          echo "✓ Unix executable created successfully"
          echo "Build info: $(ls -la build/bin/OpenGLApp)"
        else
          echo "✗ Unix executable not found"
          exit 1
        fi

    - name: Display CMake configuration info
      run: |
        echo "CMake version: $(cmake --version | head -n1)"
        echo "Build completed for ${{ runner.os }} in ${{ matrix.build_type }} mode"
